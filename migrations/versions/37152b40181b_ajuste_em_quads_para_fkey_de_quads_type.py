"""ajuste em quads para fkey de quads_type

Revision ID: 37152b40181b
Revises: b52d016531e5
Create Date: 2025-01-30 09:27:19.057313

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '37152b40181b'
down_revision: Union[str, None] = 'b52d016531e5'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('quad', sa.Column('type_id', sa.Integer(), nullable=False))
    op.create_foreign_key(None, 'quad', 'quads_type', ['type_id'], ['id'])
    op.drop_column('quad', 'type')
    op.create_unique_constraint(None, 'quads_group', ['id'])
    op.alter_column('quads_type', 'exclude',
               existing_type=postgresql.ARRAY(sa.VARCHAR()),
               nullable=False)
    op.create_unique_constraint(None, 'quads_type', ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'quads_type', type_='unique')
    op.alter_column('quads_type', 'exclude',
               existing_type=postgresql.ARRAY(sa.VARCHAR()),
               nullable=True)
    op.drop_constraint(None, 'quads_group', type_='unique')
    op.add_column('quad', sa.Column('type', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'quad', type_='foreignkey')
    op.drop_column('quad', 'type_id')
    # ### end Alembic commands ###
