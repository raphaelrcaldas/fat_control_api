"""oauth2 tables

Revision ID: c7890207b58e
Revises: e6bd9eadaa0f
Create Date: 2025-09-29 10:58:26.519265

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'c7890207b58e'
down_revision: Union[str, None] = 'e6bd9eadaa0f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('oauth2_clients',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.String(length=100), nullable=False),
    sa.Column('client_secret', sa.String(length=255), nullable=True),
    sa.Column('redirect_uri', sa.String(length=255), nullable=False),
    sa.Column('is_confidential', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='security'
    )
    op.create_index(op.f('ix_security_oauth2_clients_client_id'), 'oauth2_clients', ['client_id'], unique=True, schema='security')
    op.create_table('oauth2_authorization_codes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=255), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('code_challenge', sa.String(length=255), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('code_challenge_method', sa.String(length=10), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['security.oauth2_clients.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='security'
    )
    op.create_index(op.f('ix_security_oauth2_authorization_codes_code'), 'oauth2_authorization_codes', ['code'], unique=True, schema='security')
    op.create_table('oauth2_tokens',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('access_token', sa.String(length=255), nullable=False),
    sa.Column('refresh_token', sa.String(length=255), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('issued_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('revoked', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['security.oauth2_clients.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='security'
    )
    op.create_index(op.f('ix_security_oauth2_tokens_access_token'), 'oauth2_tokens', ['access_token'], unique=True, schema='security')
    op.create_index(op.f('ix_security_oauth2_tokens_refresh_token'), 'oauth2_tokens', ['refresh_token'], unique=True, schema='security')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_security_oauth2_tokens_refresh_token'), table_name='oauth2_tokens', schema='security')
    op.drop_index(op.f('ix_security_oauth2_tokens_access_token'), table_name='oauth2_tokens', schema='security')
    op.drop_table('oauth2_tokens', schema='security')
    op.drop_index(op.f('ix_security_oauth2_authorization_codes_code'), table_name='oauth2_authorization_codes', schema='security')
    op.drop_table('oauth2_authorization_codes', schema='security')
    op.drop_index(op.f('ix_security_oauth2_clients_client_id'), table_name='oauth2_clients', schema='security')
    op.drop_table('oauth2_clients', schema='security')
    # ### end Alembic commands ###
